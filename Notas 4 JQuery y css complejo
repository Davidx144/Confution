JQuieri permite interactuar con elementos de javascrip, html, he incluso con el backend
Tambien estan capasitados para responder ante ciertos eventos (mouse, click, keyup etc)

Tiene una estructura basica asi: 

    $(selector).action()
        $=          define que sera JQuieri
        selector=   selecciona el elementos html a interactuar
        action=     la accion sobre el elemento

        Ej:

        $("p").hide()
            Esto quiere decir que todos los elementos tipo p (parrafo), en el html, se le aplica la funcion hide, que es ocultar
        #("#mycarourel").corourel('pause').

        un ejemplo que ya habiamos usado:
            <script>
                $(document).ready(function(){
                    $('[data-toggle="tooltip"]').tooltip();
                });
            </script>


    #### Â¿Como se espesifican los selectores?
    se puede haciendolo desde las etiquetas.              "p" "boton" "h4"
    usando los id :                                       "#id" "#mycarourel"
    clases que an aplicado ciertas cosas:                 ".btn" ".btn-default"
    por atrivutos :                                       "[href]" "[data-toggle="tooltip"]"
    El elemento actual :                                  $(this)


    ########################## Eventos
    $('.carousel').carousel({interval:2000});
    #Esto quiere decir que cuendo se invoque el metodo de carousel, se ejecute esta funcion
    $("#mycarourel").on('slide.bs.carousel', funcion(){
        //la funcion hace algo
    })


    ##Breve ejemplo de un par de botones funcionales 
    peromero los botones como atrivutos
                    <div class="btn-group" id="carouselButton">
                        <button class="btn btn-danger btn-sm" id="carousel-pause">
                            <span class="fa fa-pause"></span>
                        </button>
                        <button class="btn btn-danger btn-sm" id="carousel-play">
                            <span class="fa fa-play"></span>
                        </button>
                    </div>
        Y ahora el como se controlan mediante JQuieri

        $(document).ready(function(){

            $('#carousel-pause').click(function(){
                $('#mycarousel').carousel('pause')
            });
            $('#carousel-play').click(function(){
                $('#mycarousel').carousel('cycle')
            });
        });

        ##### Algunas funciones de JQuieri
        hasClass
        removeClass
        addClass

        ###### este codigo valida si la clase del hijo es de tipo pause o play, lo remueve y lo cambia por el contrario
        ademas de hacer la accion correspondiente al carrusel

            $("#carouselButton").click(function(){
                if ($("#carouselButton").children("span").hasClass('fa-pause')) {
                    $("#mycarousel").carousel('pause');
                    $("#carouselButton").children("span").removeClass('fa-pause');
                    $("#carouselButton").children("span").addClass('fa-play');
                }
                else if ($("#carouselButton").children("span").hasClass('fa-play')){
                    $("#mycarousel").carousel('cycle');
                    $("#carouselButton").children("span").removeClass('fa-play');
                    $("#carouselButton").children("span").addClass('fa-pause');                    
                }
            });


            ########################################################################################################

                                        LESS AND Scss
                                    

                        
                        En less y Scss se puede hacer diferentes funciones en el css, tales como
                        ecuaciones matematicas con variables
                        listas 
                        string, color. operations y hacer IMPORTACIONES incluso de otras hojas de estilo


            El css suele solo definir cosas y estilos de clase, nada mas, pero hay forma de tenes clases y otros atrivutos
            con el fin de reutilizar codigo

            las clases se definen de dos formas
            less y Scss
            less usa @ y Scss usa $, de resto se parecen mucho

                                    ####################Ejemplo Less############################### 
            #esto es una variable
            
            @background-dark:512DA8;
            @carousel-item-height:300px;

            #y usamos las variables en las clases que queramos
            .carousel{
                background: @background-dark;
                #####clases anidas dentro de clases
                .carousel-item{

                    ###################Aqui podemos poner *2 y se multipliacria esta varibale a 600
                    height:@carousel-item-height*2;
                    img{
                        position: absolute;
                        top: 0px;
                        left: 0px;
                        min-height: 300px;
                    }
                }
            }


                                    ####################Ejemplo Scss############################### 
            #esto es una variable
            
            $background-dark:512DA8;
            $carousel-item-height:300px;

            #y usamos las variables en las clases que queramos
            .carousel{
                background: $background-dark;
                #####clases anidas dentro de clases
                .carousel-item{

                    ###################Aqui podemos poner *2 y se multipliacria esta varibale a 600
                    height:$carousel-item-height*2;
                    img{
                        position: absolute;
                        top: 0px;
                        left: 0px;
                        min-height: 300px;
                    }
                }
            }



            ######################### Mixins ###########################
            para re utilizar grupos competos de atributos

                                            ejemplos con Less

            .zero-margin {
                margin: 0px auto;
                background: @white;
            }

            .row-header {
                .zero-margin;
                padding: 0px auto;
            }
                        ###Aqui se pueden definir valores predeterminados, en este caso 0
                        #####definiendo paramtros 
                        zero-margin (@pad-up-dn: 0px, @pad-left-right: 0px){
                            margin: 0px auto;
                            padding: $pad-up-dn $pad-left-right;
                        }

                        .row-header {
                            #aunque por definicion en 0px en los dos, se puede llamar pasando parametros dintintos
                            ###seria algo como .zero-margin(50px,0px);
                            .zero-margin();
                            padding: 0px auto;
                        }


                                            ejemplos con Scss

            @mixin zero-margin {
                margin: 0px auto;
                background: @white;
            }

            .row-header {
                @include zero-margin;
                padding: 0px auto;
            }
                        ### Aqui no se puede al parecer poner valores predeterminados
                        se tiennen que espesificar cuando se llaman en las otras clases
                        #####definiendo paramtros 
                        @mixin zero-margin ($pad-up-dn, $pad-left-right){
                            margin: 0px auto;
                            padding: $pad-up-dn $pad-left-right;
                        }

                        .row-header {
                            @include zero-margin (50px, 0px);
                            padding: 0px auto;
                        }



                <div class="col-12 col-sm align-self-center">
                    <a role="button" class="btn btn-block nav-link btn-warning mt-2"
                        data-toggle="modal" data-target="#reserveTable" 
                        data-placement="bottom">Reserve Table</a>
                </div>